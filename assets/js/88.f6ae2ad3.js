(window.webpackJsonp=window.webpackJsonp||[]).push([[88],{415:function(t,a,i){"use strict";i.r(a);var s=i(7),v=Object(s.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h3",{attrs:{id:"事务的四大特性-acid"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#事务的四大特性-acid"}},[t._v("#")]),t._v(" 事务的四大特性(ACID)")]),t._v(" "),a("ul",[a("li",[t._v("原子性(Atomicity):事务中的所有操作，要么全部成功，要么全部失败")]),t._v(" "),a("li",[t._v("一致性(Consistency):事务前后数据的完整性必须保持一致")]),t._v(" "),a("li",[t._v("隔离性(Isolation):事务的隔离性是多个用户并发访问数据库时，数据库为每一个用户开启的事务，不能被其他事务的操作数据所干扰，多个并发事务之间要相互隔离。")]),t._v(" "),a("li",[t._v("持久性(Durability):持久性是指一个事务一旦被提交，它对数据库中数据的改变就是永久性的，接下来即使数据库发生故障也不应该对其有任何影响")])]),t._v(" "),a("h3",{attrs:{id:"cap定理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cap定理"}},[t._v("#")]),t._v(" CAP定理")]),t._v(" "),a("p",[t._v("分布式系统有三个指标")]),t._v(" "),a("ul",[a("li",[t._v("Consistency(一致性)：用户访问分布式系统中的任意节点，得到的数据必须一致")]),t._v(" "),a("li",[t._v("Availability(可用性)：用户访问集群中的任意健康节点，必须能得到响应，而不是超时或拒绝")]),t._v(" "),a("li",[t._v("Partition tolerance(分区容错性)：因为网络故障或其它原因导致分布式系统中的部分节点与其它节点失去连接，形成独立分区。在集群出现分区时，整个系统也要持续对外提供服务\n分布式系统无法同时满足这三个指标。分布式系统节点通过网络连接，一定会出现分区问题(P)，当分区出现时，系统的一致性(C)和可用性(A)就无法同时满足，这个结论就叫做 CAP 定理。")])]),t._v(" "),a("div",{staticClass:"center-container"},[a("img",{staticStyle:{zoom:"60%"},attrs:{src:"https://image-1-1257237419.cos.ap-chongqing.myqcloud.com/img/CAP.png",alt:"CAP"}})]),a("h3",{attrs:{id:"base理论"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#base理论"}},[t._v("#")]),t._v(" BASE理论")]),t._v(" "),a("p",[t._v("BASE理论是对CAP的一种解决思路，包含三个思想：")]),t._v(" "),a("ul",[a("li",[t._v("Basically Available(基本可用)：分布式系统在出现故障时，允许损失部分可用性，即保证核心可用。")]),t._v(" "),a("li",[t._v("Soft State(软状态)：在一定时间内，允许出现中间状态，比如临时的不一致状态。")]),t._v(" "),a("li",[t._v("Eventually Consistent(最终一致性)：虽然无法保证强一致性，但是在软状态结束后，最终达到数据一致。")])]),t._v(" "),a("p",[t._v("而"),a("strong",[t._v("分布式事务最大的问题是各个子事务的一致性问题")]),t._v("，因此可以借鉴CAP定理和BASE理论：\nAP模式：各子事务分别执行和提交，允许出现结果不一致，然后采用弥补措施恢复数据即可，实现"),a("strong",[t._v("最终一致")]),t._v("。\nCP模式：各个子事务执行后互相等待，同时提交，同时回滚，达成"),a("strong",[t._v("强一致")]),t._v("。但事务等待过程中，处于弱可用状态。")])])}),[],!1,null,null,null);a.default=v.exports}}]);